:root {
  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  --section-heading: clamp(2.6rem, 5vw, 3.2rem);
  --secondary-heading: clamp(2.4rem, 5vw, 2.8rem);
  --p-text: clamp(1.8rem, 2.5cqi, 2.4rem);

  --check: 3px solid pink;
  --slider-bg: #FF322C;

}

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: 62.5%;
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;
  overflow-x: hidden;
}

body {
 width: 128rem;
 background-color: #e5e7eb;
 color: #242424;
 
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;

  &:hover {
    color: #535bf2;
  }
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;

  &:hover {
    border-color: #646cff;
  }

  &:focus,
  &:focus-visible {

    outline: 4px auto -webkit-focus-ring-color;
  }
}

h2 {
  font-size: var(--section-heading);
}

p {
  font-size: var(--p-text);
  text-wrap-style: balance;
}

h2, p {
  /* color: #e5e7eb; */
  color: black;
}

.half-vp {
  height: 50svh;
}
.full-vp {
  height: 100svh;
}

.section-wrapper {
  position: relative;
  height: 500svh;
  display: grid;
  /* I had to specify a fixed size for the first column so the other one with a width 
      of -svw wouldn't take over the other content space, it will do so when using -fr unit*/
  grid-template-columns: calc(30rem + 5rem) 1fr; /* 5rem is padding, maybe I'll remove it from here and adding it inside the element itself*/
  padding-inline: 6rem;
  border: var(--check);
}

.sticky-side {
  position: sticky;
  top: 2rem;
  max-height: calc(9rem * 3); /*3 is the number of shown labels at once*/
  overflow: hidden;

  background-color: palevioletred;

  border: var(--check);
  border-color: royalblue;
}

.non-sticky-side {
  position: sticky;
  top: 2rem;
  display: flex;
  /* max-height: 100%; */


  border: var(--check);
  border-color: royalblue;
}

.label-list {
  position: relative;
  display: flex;
  flex-direction: column;
  margin-block: 9rem;

  transform: translate3d(0, 0, 0);
  transition: all 0.4s ease-in;

  h2 {
    height: 9rem;
    opacity: 0.3;
    transition: all 0.4s ease-in;
  }

}

.description-list {
  /* as the same as the height of the label */
  padding-top: 9rem;
  transition: all 0.4s ease-in;

  border: var(--check);
  border-color: yellow;

  &>* {
    width: 80svw;
  }
}

.gutter-1 {
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
  position: absolute;
}

.gutter-2 {
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 3;
  position: absolute;
}

.red-bg {
  height: 100%;
  background-color: var(--slider-bg);
}

.transparent-bg {
  height: 100%;
  background: linear-gradient(0deg,
    #FF322C 5%,
    rgba(255, 50, 44, 0) 35%,
    rgba(255, 50, 44, 0) 65%,
    #FF322C 95%);
}

.white-text {
  color: orange;
}

.grid-wrapper {
  max-width: 100rem;
  margin-inline: auto;
}

.grid {
  container-type: inline-size;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(min(8.3333rem, 100%), 1fr));
  gap: 2rem;
}